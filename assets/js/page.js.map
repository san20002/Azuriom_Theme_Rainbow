{"version":3,"file":"/js/page.js","mappings":"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","sources":["webpack://Rainbow/webpack/bootstrap","webpack://Rainbow/./js/config-custom-azuriom/page.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","//buttons/forms default values\r\nexport let spacingArray = ['', '0', 'var(--space-xxxxs)', 'var(--space-xxxs)', 'var(--space-xxs)', 'var(--space-xs)', 'var(--space-sm)', 'var(--space-md)', 'var(--space-lg)', 'var(--space-xl)', 'var(--space-xxl)', 'var(--space-xxxl)', 'var(--space-xxxxl)'],\r\n    textArray = ['', 'var(--text-xs)', 'var(--text-sm)', 'var(--text-md)', 'var(--text-lg)', 'var(--text-xl)', 'var(--text-xxl)', 'var(--text-xxxl)', 'var(--text-xxxxl)', 'inherit'],\r\n    textArrayValues = ['', 'var(--text-xs)', 'var(--text-sm)', 'var(--text-md)', 'var(--text-lg)', 'var(--text-xl)', 'var(--text-xxl)', 'var(--text-xxxl)', 'inherit', '', 'var(--text-xxxxl)'],\r\n    fontArray = ['', '--font-primary'],\r\n    btnFontIds = [0, 1],\r\n    btnColorCustomNiceLabels = [],\r\n    btnGradientsCustomNiceLabels = [],\r\n    btnColorLabels = [\"primary\", \"accent\", \"download\", \"warning\", \"success\", \"error\", \"info\"],\r\n    shadowVariables = ['', '', 'var(--shadow-xs)', 'var(--shadow-sm)', 'var(--shadow-md)', 'var(--shadow-lg)', 'var(--shadow-xl)'],\r\n    borderRadiusValues = ['', 'var(--radius-sm)', 'var(--radius-md)', 'var(--radius-lg)']\r\n;\r\n\r\nexport function setBtnColorCustomNiceLabels(colors, customNice) {\r\n    if (colors) {\r\n        btnColorLabels = colors;\r\n    }\r\n    if (customNice) {\r\n        btnColorCustomNiceLabels = customNice;\r\n    }\r\n}\r\n;\r\n\r\nexport function setBtnGradientNiceLabels(gradients) {\r\n    if (gradients && gradients.length > 0) {\r\n        btnGradientsCustomNiceLabels = gradients;\r\n    }\r\n}\r\n;\r\n\r\nexport function decodeSafeURIComponent(string) {\r\n    return decodeURIComponent(string.replace(/%\"/g, '%25\"'));\r\n}\r\n;\r\n\r\nexport function getCursorValue(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return '';\r\n            break;\r\n        case 1:\r\n            return 'auto';\r\n            break;\r\n        case 2:\r\n            return 'pointer';\r\n            break;\r\n        case 3:\r\n            return 'not-allowed';\r\n            break;\r\n        default:\r\n            return 'auto';\r\n    }\r\n}\r\n;\r\n\r\nexport function getBorderType(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return 'border';\r\n            break;\r\n        case 1:\r\n            return 'border-top';\r\n            break;\r\n        case 2:\r\n            return 'border-right';\r\n            break;\r\n        case 3:\r\n            return 'border-bottom';\r\n            break;\r\n        case 4:\r\n            return 'border-left';\r\n            break;\r\n        default:\r\n            return 'border';\r\n    }\r\n}\r\n;\r\n\r\nexport function getBorderStyle(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return 'none';\r\n            break;\r\n        case 1:\r\n            return 'solid';\r\n            break;\r\n        case 2:\r\n            return 'dashed';\r\n            break;\r\n        case 3:\r\n            return 'dotted';\r\n            break;\r\n        default:\r\n            return 'solid';\r\n    }\r\n}\r\n;\r\n\r\nexport function getTextTransform(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return '';\r\n            break;\r\n        case 1:\r\n            return 'none';\r\n            break;\r\n        case 2:\r\n            return 'capitalize';\r\n            break;\r\n        case 3:\r\n            return 'uppercase';\r\n            break;\r\n        case 4:\r\n            return 'lowercase';\r\n            break;\r\n        default:\r\n            return 'none';\r\n    }\r\n}\r\n;\r\n\r\nexport function getTextDecoration(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return '';\r\n            break;\r\n        case 1:\r\n            return 'none';\r\n            break;\r\n        case 2:\r\n            return 'underline';\r\n            break;\r\n        default:\r\n            return 'none';\r\n    }\r\n}\r\n;\r\n\r\nexport function getFontSmoothing() {\r\n    return '-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;';\r\n}\r\n;\r\n\r\nexport function getBoxShadowType(index) {\r\n    if (index == 0)\r\n        return '';\r\n    else\r\n        return 'inset ';\r\n}\r\n;\r\n\r\nexport function getTransitionProperty(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return 'all';\r\n            break;\r\n        case 1:\r\n            return 'none';\r\n            break;\r\n        case 2:\r\n            return 'background';\r\n            break;\r\n        case 3:\r\n            return 'opacity';\r\n            break;\r\n        case 4:\r\n            return 'border';\r\n            break;\r\n        case 5:\r\n            return 'box-shadow';\r\n            break;\r\n        case 6:\r\n            return 'outline';\r\n            break;\r\n        case 7:\r\n            return 'transform';\r\n            break;\r\n        case 8:\r\n            return 'color';\r\n            break;\r\n        default:\r\n            return 'all';\r\n    }\r\n}\r\n;\r\n\r\nexport function getTransitionEase(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return 'ease';\r\n            break;\r\n        case 1:\r\n            return 'linear';\r\n            break;\r\n        case 2:\r\n            return 'ease-in';\r\n            break;\r\n        case 3:\r\n            return 'ease-out';\r\n            break;\r\n        case 4:\r\n            return 'var(--ease-in-out)';\r\n            break;\r\n        case 5:\r\n            return 'var(--ease-in)';\r\n            break;\r\n        case 6:\r\n            return 'var(--ease-out)';\r\n            break;\r\n        case 7:\r\n            return 'var(--ease-out-back)';\r\n            break;\r\n        default:\r\n            return 'ease';\r\n    }\r\n}\r\n;\r\n\r\nexport function getTransitionDelay(val) {\r\n    if (val == '')\r\n        return '';\r\n    return ' ' + val + 's';\r\n}\r\n;\r\n\r\nexport function getTransformProperty(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return 'none';\r\n            break;\r\n        case 1:\r\n            return 'translate';\r\n            break;\r\n        case 2:\r\n            return 'translateX';\r\n            break;\r\n        case 3:\r\n            return 'translateY';\r\n            break;\r\n        case 4:\r\n            return 'translateZ';\r\n            break;\r\n        case 5:\r\n            return 'scale';\r\n            break;\r\n        case 6:\r\n            return 'scaleX';\r\n            break;\r\n        case 7:\r\n            return 'scaleY';\r\n            break;\r\n        case 8:\r\n            return 'scaleZ';\r\n            break;\r\n        case 9:\r\n            return 'rotate';\r\n            break;\r\n        case 10:\r\n            return 'rotateX';\r\n            break;\r\n        case 11:\r\n            return 'rotateY';\r\n            break;\r\n        case 12:\r\n            return 'rotateZ';\r\n            break;\r\n        default:\r\n            return 'none';\r\n    }\r\n}\r\n;\r\n\r\nexport function getOutlineStyle(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return '';\r\n            break;\r\n        case 1:\r\n            return 'auto';\r\n            break;\r\n        case 2:\r\n            return 'dotted';\r\n            break;\r\n        case 3:\r\n            return 'dashed';\r\n            break;\r\n        case 4:\r\n            return 'solid';\r\n            break;\r\n        case 5:\r\n            return 'double';\r\n            break;\r\n        case 6:\r\n            return 'inset';\r\n            break;\r\n        case 7:\r\n            return 'outset';\r\n            break;\r\n        case 8:\r\n            return 'none';\r\n            break;\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n;\r\n\r\nexport function getOutlineOffset(val) {\r\n    if (val == '')\r\n        return '';\r\n    return 'outline-offset: ' + val + ';';\r\n}\r\n;\r\n\r\nexport function getColorValue(val, reset) {\r\n    if (!val || val == null)\r\n        return '';\r\n    // check if inherit/transparent/default\r\n    if (val == 'transparent' || val.indexOf('transparent') == 0)\r\n        return 'transparent';\r\n    if (val == 'inherit' || val.indexOf('inherit') == 0)\r\n        return 'inherit';\r\n    if (val == '' || val.indexOf('-a') == 0)\r\n        return '';\r\n    //check if custom color\r\n    return getColorValueFromList(val, reset);\r\n}\r\n;\r\n\r\nexport function getColorValueFromList(label, reset) {\r\n    var fallback = '';\r\n    if (!label || label == null)\r\n        return '';\r\n    label = getNiceLabelForCustom(label);\r\n    if (!label)\r\n        return '';\r\n    //check if this is an opacity value and provide fallback\r\n    if (checkColorIsOpacity(label)) {\r\n        if (reset && reset == true) {\r\n            //need to return css value\r\n            var basicLabel = removeOpacityFromLabel(label);\r\n            return 'hsla(var(' + basicLabel + '-h), var(' + basicLabel + '-s), var(' + basicLabel + '-l), ' + getOpacityDecFromLabel(label) + ')';\r\n        } else {\r\n            //return sass mixin\r\n            return 'alpha(var(' + removeOpacityFromLabel(label) + '), ' + getOpacityDecFromLabel(label) + ')';\r\n        }\r\n    } else {\r\n        return 'var(' + label + ')';\r\n    }\r\n}\r\n;\r\n\r\nexport function getNiceLabelForCustom(label) {\r\n    if (label.indexOf('custom-') > -1) {\r\n        var prefix = (label.indexOf('custom-fdb-') > -1) ? 'custom-fdb-' : 'custom-';\r\n        var labelArray = label.split(prefix)\r\n            , split = labelArray[1].split('-');\r\n        if (split.length > 1) {\r\n            var customLabel = prefix + split[0];\r\n            label = btnColorCustomNiceLabels[btnColorLabels.indexOf(customLabel) - 5] + labelArray[1].replace(split[0], '');\r\n        } else {\r\n            var customLabel = prefix + labelArray[1];\r\n            label = btnColorCustomNiceLabels[btnColorLabels.indexOf(customLabel) - 5];\r\n        }\r\n    }\r\n    return label;\r\n}\r\n;\r\n\r\nexport function removeOpacityFromLabel(label) {\r\n    return label.slice(0, -4);\r\n}\r\n;\r\n\r\nexport function getOpacityDecFromLabel(label) {\r\n    var opacity = parseInt(label.slice(-4).replace('-a', ''));\r\n    if (isNaN(opacity))\r\n        return 1;\r\n    return parseFloat((opacity / 100).toFixed(2));\r\n}\r\n;\r\n\r\nexport function checkColorIsOpacity(label) {\r\n    var array = label.split('-');\r\n    if (array.length > 0 && array[array.length - 1].indexOf('a') == 0 && array[array.length - 1].length == 3) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n;\r\n\r\nexport function getColorFbIos($color, $varLabel, $spacing, $reset) {\r\n    if (!$color || $color == null)\r\n        return ['', ''];\r\n    if ($color == 'transparent' || $color == 'inherit' || $color == '')\r\n        return ['', $color];\r\n    return ['', getColorValue($color, $reset)];\r\n}\r\n;//if you updates this -> you'll need to update the same in the app-global.js as well\r\nlet paddingVariables = ['--space-xxxxs', '--space-xxxs', '--space-xxs', '--space-xs', '--space-sm', '--space-md', '--space-lg', '--space-xl', '--space-xxl', '--space-xxxl', '--space-xxxxl']\r\n    , fibonacciSeq = [0.125, 0.25, 0.375, 0.5, 0.75, 1.25, 2, 3.25, 5.25, 8.5, 13.75]\r\n    , prFourth = [0.237, 0.316, 0.422, 0.563, 0.75, 1, 1.333, 1.777, 2.369, 3.157, 4.21]\r\n    , auFourth = [0.177, 0.25, 0.354, 0.5, 0.707, 1, 1.414, 1.999, 2.827, 3.998, 5.65]\r\n    , prFifth = [0.133, 0.2, 0.296, 0.444, 0.667, 1, 1.5, 2.25, 3.375, 5.063, 7.59]\r\n    , goldenRatio = [0.09, 0.146, 0.236, 0.382, 0.618, 1, 1.618, 2.618, 4.236, 6.854, 11.08]\r\n    , spaceRatioUnit = [false, fibonacciSeq, prFourth, auFourth, prFifth, goldenRatio, ''];\r\n\r\nexport function getHSL(color) {\r\n    if (isNaN(color[0]))\r\n        color[0] = 0;\r\n    return 'hsl(' + Math.round(color[0]) + ', ' + Math.round(color[1] * 100) + '%, ' + Math.round(color[2] * 100) + '%)';\r\n}\r\n;\r\n\r\nexport function getHSLA(color, opacity) {\r\n    if (isNaN(color[0]))\r\n        color[0] = 0;\r\n    return 'hsla(' + Math.round(color[0]) + ', ' + Math.round(color[1] * 100) + '%, ' + Math.round(color[2] * 100) + '%, ' + parseFloat((Number(opacity) / 100).toFixed(2)) + ')';\r\n}\r\n;\r\n\r\nexport function setHSLAfromHSL(color, opacity) {\r\n    color = color.replace('hsl(', 'hsla(');\r\n    color = color.replace(')', ', ' + parseFloat((Number(opacity) / 100).toFixed(2)) + ')');\r\n    return color;\r\n}\r\n;\r\n\r\nexport function getHSLFromString(color) {\r\n    var array = color.replace('hsl(', '').replace(')', '').split(',');\r\n    if (array && array.length > 1) {\r\n        return [Number(array[0].trim()), parseFloat(((array[1].trim().replace('%', '')) / 100).toFixed(2)), parseFloat(((array[2].trim().replace('%', '')) / 100).toFixed(2))];\r\n    } else {\r\n        return '';\r\n    }\r\n\r\n}\r\n;\r\n\r\nexport function setCssVariable(variable, value, priority) {\r\n    var root = document.documentElement;\r\n    if (priority) {\r\n        root.style.setProperty(variable, value, priority);\r\n    } else {\r\n        root.style.setProperty(variable, value);\r\n    }\r\n\r\n}\r\n;\r\n\r\nexport function getCssVariable(variable) {\r\n    return getComputedStyle(document.documentElement).getPropertyValue(variable);\r\n}\r\n;\r\n\r\nexport function setBodyCssVariable(variable, value) {\r\n    var body = document.getElementsByTagName('body')[0];\r\n    body.style.setProperty(variable, value);\r\n}\r\n;\r\n\r\nexport function setElementCssVariable(className, variable, value) {\r\n    var element = document.getElementsByClassName(className);\r\n    if (element.length > 0) {\r\n        element[0].style.setProperty(variable, value);\r\n    }\r\n}\r\n;\r\n\r\nexport function windowScrollTo(val) {\r\n    window.scrollTo(0, val);\r\n}\r\n;\r\n\r\nexport function selectIframeSection(val) {\r\n    var section = $('[data-section=\"' + val + '\"]');\r\n    $('.cd-demo-item--selected').removeClass('cd-demo-item--selected');\r\n    if (section.length > 0) {\r\n        section.addClass('cd-demo-item--selected');\r\n        if ($('.cd-demo-color__list--selected').length > 0) {\r\n            $('.cd-demo-color__list--selected').removeClass('cd-demo-color__list--selected');\r\n            section.addClass('cd-demo-color__list--selected');\r\n        }\r\n        windowScrollTo(section.parent().offset().top - 20);\r\n    }\r\n}\r\n;\r\n\r\nexport function selectIframeTab(val) {\r\n    //remove the selection effect\r\n    $('.cd-demo-item--selected').removeClass('cd-demo-item--selected');\r\n    var section = $('[data-tab]');\r\n    if (section.length > 0) {\r\n        section.addClass('cd-demo-item--is-hidden');\r\n        section.filter('[data-tab=\"' + val + '\"]').removeClass('cd-demo-item--is-hidden');\r\n\r\n        if (val == 'tab-lh-crop') {\r\n            //lhcrop in typograpgy -> select --font-primary\r\n            selectIframeSection('--font-1');\r\n        }\r\n    }\r\n}\r\n;\r\n\r\nexport function getMq() {\r\n    var windowWidth = $(window).outerWidth()\r\n        , mq = 0\r\n        , string = '';\r\n    // check if you can get external document width\r\n    if (window.parent && window.parent.document && window.parent.document.body && window.parent.document.body.clientWidth) {\r\n        windowWidth = window.parent.document.body.clientWidth;\r\n    }\r\n    switch (true) {\r\n        case windowWidth >= 1440:\r\n            mq = 5;\r\n            string = 'Visible mq: > 1440px';\r\n            break;\r\n        case windowWidth >= 1280:\r\n            mq = 4;\r\n            string = 'Visible mq: > 1280px';\r\n            break;\r\n        case windowWidth >= 1024:\r\n            mq = 3;\r\n            string = 'Visible mq: > 1024px';\r\n            break;\r\n        case windowWidth >= 600:\r\n            mq = 2;\r\n            string = 'Visible mq: > 600px';\r\n            break;\r\n        case windowWidth >= 480:\r\n            mq = 1;\r\n            string = 'Visible mq: > 480px';\r\n            break;\r\n        default:\r\n            mq = 0;\r\n            string = 'None';\r\n    }\r\n    $('.js-width').text(string);\r\n    return mq;\r\n}\r\n;\r\n\r\nexport function getScreenSize() {\r\n    if (window.parent && window.parent.document && window.parent.document.body && window.parent.document.body.clientWidth) {\r\n        return [window.parent.document.body.clientWidth, $(window).outerHeight()];\r\n    } else {\r\n        return [$(window).outerWidth(), $(window).outerHeight()];\r\n    }\r\n}\r\n;\r\n\r\nexport function getValidResponsiveValue(spaceArray, index, subIndex) {\r\n    var item = (subIndex !== false) ? spaceArray[index][subIndex] : spaceArray[index];\r\n    if (index == 0)\r\n        return item;\r\n    if (item !== false && item !== '') {\r\n        return item;\r\n    } else {\r\n        return getValidResponsiveValue(spaceArray, index - 1, subIndex);\r\n    }\r\n}\r\n;\r\n\r\nexport function getValueUnit(value) {\r\n    if (!value || value == '')\r\n        return [false, false];\r\n    var number = parseFloat(value)\r\n        , unit = value.replace(number, '');\r\n    return [number, unit];\r\n}\r\n;\r\n\r\nexport function getBodyNotFalse(array, mq) {\r\n    var newArray = [];\r\n    for (var i = 0; i < 3; i++) {\r\n        newArray[i] = getValidResponsiveValue(array, mq, i);\r\n    }\r\n    return newArray;\r\n}\r\n;\r\nvar projectLoaded = '';\r\nvar MQ = getMq();\r\n\r\nexport function loadGlobalsStyle(project) {\r\n    //for components -> load project style\r\n    if (project) {\r\n        $('.js-cd-demo').trigger('globalsUpdating');\r\n        projectLoaded = project;\r\n    }\r\n\r\n    if (project.colors && project.colors !== '' && Object.values) {\r\n        //colors were saved and need to be modified\r\n        loadColorStyle(JSON.parse(project.colors));\r\n    } else {\r\n        loadColorDefaultStyle();\r\n    }\r\n\r\n    if (project.typography && project.typography !== '' && Object.values) {\r\n        //typography was saved and need to be modified\r\n        loadTypographyStyle(JSON.parse(decodeSafeURIComponent(project.typography)), true, MQ);\r\n    } else {\r\n        loadTypographyDefaultStyle(true, MQ);\r\n    }\r\n    //do the same for the other globals\r\n    if (project.spacing && project.spacing !== '' && Object.values) {\r\n        loadSpacingStyle(JSON.parse(decodeSafeURIComponent(project.spacing)), MQ);\r\n    } else {\r\n        loadSpacingDefaultStyle(MQ);\r\n    }\r\n\r\n    if (project.buttons && project.buttons !== '' && Object.values) {\r\n        loadButtonsStyle(JSON.parse(decodeSafeURIComponent(project.buttons)), MQ);\r\n    } else {\r\n        loadButtonsDefaultStyle(MQ);\r\n    }\r\n    if (project.form && project.form !== '' && Object.values) {\r\n        loadFormsStyle(JSON.parse(decodeSafeURIComponent(project.form)), MQ);\r\n    } else {\r\n        loadFormsDefaultStyle(MQ);\r\n    }\r\n    //if you need to update style on resize\r\n    if (project) {\r\n        $('.js-cd-demo').trigger('globalsUpdate');\r\n    }\r\n    $('.js-cd-demo').trigger('showComponent');\r\n}\r\n;\r\n\r\nexport function loadColorStyle(colors) {\r\n    //no need to do this for custom opacities as only default one are used in components\r\n    var variations = ['-lighter', '-light', '', '-dark', '-darker'];\r\n\r\n    btnColorLabels = Object.values(colors['mainColorLabels']);\r\n    btnColorCustomNiceLabels = (colors['customColorLabels']) ? Object.values(colors['customColorLabels']) : [];\r\n    btnGradientsCustomNiceLabels = (colors['gradientColorLabels']) ? Object.values(colors['gradientColorLabels']) : [];\r\n    //set main colors - including custom colors as well\r\n    for (var i = 0; i < btnColorLabels.length; i++) {\r\n        var cssVarLab = (i > 4) ? btnColorCustomNiceLabels[i - 5] : '--color-' + btnColorLabels[i];\r\n        for (var j = 0; j < variations.length; j++) {\r\n            setCssVariable(cssVarLab + variations[j], getHSL(Object.values(colors[btnColorLabels[i]][0][j])));\r\n            setColorPartVariables(cssVarLab + variations[j], Object.values(colors[btnColorLabels[i]][0][j]));\r\n        }\r\n    }\r\n\r\n    //set black & white\r\n    var bVariations = ['', '-light', '-lighter']\r\n        , blackArray = getBWArray(colors['blackColors'][0])\r\n        , whiteArray = getBWArray(colors['whiteColors'][0]);\r\n\r\n    for (var i = 0; i < blackArray.length; i++) {\r\n        setCssVariable('--color-black' + bVariations[i], getHSL(blackArray[i]));\r\n        setColorPartVariables('--color-black' + bVariations[i], blackArray[i]);\r\n    }\r\n    var wVariations = ['', '-dark', '-darker'];\r\n    for (var i = 0; i < whiteArray.length; i++) {\r\n        setCssVariable('--color-white' + wVariations[i], getHSL(whiteArray[i]));\r\n        setColorPartVariables('--color-white' + wVariations[i], whiteArray[i]);\r\n    }\r\n\r\n    //set contrasts\r\n    var contrastLabels = ['-bg', '-contrast-lower', '-contrast-low', '-contrast-medium', '-contrast-high', '-contrast-higher'];\r\n    for (var i = 0; i < contrastLabels.length; i++) {\r\n        setCssVariable('--color' + contrastLabels[i], getHSL(Object.values(colors['contrastColors'][0][i])));\r\n        setColorPartVariables('--color' + contrastLabels[i], Object.values(colors['contrastColors'][0][i]));\r\n    }\r\n\r\n    // set gradients\r\n    for (var i = 0; i < btnGradientsCustomNiceLabels.length; i++) {\r\n        var cssVarLab = '--gradient-' + btnGradientsCustomNiceLabels[i]\r\n            , gradientId = colors['gradientColorIds'][i] + 'Gradients';\r\n        setCssVariable(cssVarLab + '-stop-1', getHSL(Object.values(colors[gradientId][0][0])));\r\n        setColorPartVariables(cssVarLab + '-stop-1', Object.values(colors[gradientId][0][0]));\r\n        setCssVariable(cssVarLab + '-stop-2', getHSL(Object.values(colors[gradientId][0][1])));\r\n        setColorPartVariables(cssVarLab + '-stop-2', Object.values(colors[gradientId][0][1]));\r\n    }\r\n\r\n    //font rendering\r\n    var fontRenderingCode = '';\r\n    if (colors['fontRendering'] && colors['fontRendering'][0]) {\r\n        if (Number(colors['fontRendering'][0]) == 1)\r\n            fontRenderingCode = 'body{-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;}';\r\n        else if (Number(colors['fontRendering'][0]) == 2)\r\n            fontRenderingCode = 'body{-webkit-font-smoothing: auto;-moz-osx-font-smoothing: auto;}';\r\n    }\r\n    var style = '<style id=\"font-rendering-style\">' + fontRenderingCode + '</style>';\r\n    $('#font-rendering-style').remove();\r\n    var baseStyle = $('#cd-base-part-1');\r\n    $(style).insertAfter(baseStyle);\r\n}\r\n;\r\n\r\nexport function loadColorDefaultStyle() {\r\n    // colors array\r\n    var defaultColors = [\r\n        ['--color-primary-darker', [204, 70, 33]],\r\n        ['--color-primary-dark', [204, 70, 43]],\r\n        ['--color-primary', [204, 70, 53]],\r\n        ['--color-primary-light', [204, 70, 63]],\r\n        ['--color-primary-lighter', [204, 70, 73]],\r\n        ['--color-accent-darker', [282, 44, 27]],\r\n        ['--color-accent-dark', [282, 44, 37]],\r\n        ['--color-accent', [282, 44, 47]],\r\n        ['--color-accent-light', [282, 44, 57]],\r\n        ['--color-accent-lighter', [282, 44, 67]],\r\n        ['--color-download-darker', [145, 63, 22]],\r\n        ['--color-download-dark', [145, 63, 32]],\r\n        ['--color-download', [145, 63, 42]],\r\n        ['--color-download-light', [145, 63, 52]],\r\n        ['--color-download-lighter', [145, 63, 62]],\r\n        ['--color-black', [240, 8, 12]],\r\n        ['--color-white', [0, 0, 100]],\r\n        ['--color-warning-darker', [46, 68, 29]],\r\n        ['--color-warning-dark', [46, 68, 39]],\r\n        ['--color-warning', [46, 68, 49]],\r\n        ['--color-warning-light', [46, 68, 59]],\r\n        ['--color-warning-lighter', [46, 68, 69]],\r\n        ['--color-success-darker', [94, 48, 20]],\r\n        ['--color-success-dark', [94, 48, 30]],\r\n        ['--color-success', [94, 48, 40]],\r\n        ['--color-success-light', [94, 48, 50]],\r\n        ['--color-success-lighter', [94, 48, 60]],\r\n        ['--color-error-darker', [6, 63, 26]],\r\n        ['--color-error-dark', [6, 63, 36]],\r\n        ['--color-error', [6, 63, 46]],\r\n        ['--color-error-light', [6, 63, 56]],\r\n        ['--color-error-lighter', [6, 63, 66]],\r\n        ['--color-info-darker', [204, 62, 27]],\r\n        ['--color-info-dark', [204, 62, 37]],\r\n        ['--color-info', [204, 62, 47]],\r\n        ['--color-info-light', [204, 62, 57]],\r\n        ['--color-info-lighter', [204, 62, 67]],\r\n        ['--color-bg', [220, 5, 22]],\r\n        ['--color-contrast-lower', [216, 4, 25]],\r\n        ['--color-contrast-low', [220, 3, 34]],\r\n        ['--color-contrast-medium', [220, 2, 63]],\r\n        ['--color-contrast-high', [180, 2, 90]],\r\n        ['--color-contrast-higher', [0, 0, 100]]\r\n    ];\r\n    for (var i = 0; i < defaultColors.length; i++) {\r\n        setCssVariable(defaultColors[i][0], getHSL(defaultColors[i][1]));\r\n        setColorPartVariables(defaultColors[i][0], defaultColors[i][1]);\r\n    }\r\n}\r\n;\r\n\r\nexport function setColorPartVariables(label, colorArray) {\r\n    setCssVariable(label + '-h', Math.round(colorArray[0]));\r\n    setCssVariable(label + '-s', Math.round(colorArray[1] * 100) + '%');\r\n    setCssVariable(label + '-l', Math.round(colorArray[2] * 100) + '%');\r\n}\r\n;\r\n\r\nexport function getBWArray(obj) {\r\n    var array = [];\r\n    for (var property in obj) {\r\n        if (obj.hasOwnProperty(property)) {\r\n            array.push(Object.values(obj[property]));\r\n        }\r\n    }\r\n    return array;\r\n}\r\n;\r\n\r\nexport function loadTypographyStyle(typography, bool, mq) {\r\n    if (bool) {\r\n        //not responsive things\r\n        if (typography['fontCode'] && typography != '')\r\n            $(typography['fontCode']).appendTo($('head'));\r\n        for (var property in typography['fontFamilies']) {\r\n            if (typography['fontFamilies'].hasOwnProperty(property) && typography['fontFamilyLabels'].hasOwnProperty(property)) {\r\n                setBodyCssVariable(typography['fontFamilyLabels'][property], typography['fontFamilies'][property]);\r\n            }\r\n        }\r\n        if (typography['lhCropCapitalLetter']) {\r\n            var lhcropArray = Object.values(typography['lhCropCapitalLetter']);\r\n            if (lhcropArray.length > 0)\r\n                setCssVariable('--font-primary-capital-letter', lhcropArray[0]);\r\n        }\r\n\r\n        fontArray = [''];\r\n        btnFontIds = [0];\r\n        for (var property in typography['fontFamilyLabels']) {\r\n            if (typography['fontFamilyLabels'].hasOwnProperty(property)) {\r\n                fontArray.push(typography['fontFamilyLabels'][property]);\r\n                btnFontIds.push(typography['fontFamilyIds'][property]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //body/heading style\r\n    var headingValues = getBodyNotFalse(getTypographyArray(typography['headingInfo']), mq)\r\n        , bodyValues = getBodyNotFalse(getTypographyArray(typography['bodyInfo']), mq);\r\n\r\n    var textVariables = 'root, *{--text-xs: calc((var(--text-unit) / var(--text-scale-ratio)) / var(--text-scale-ratio));--text-sm: calc(var(--text-xs) * var(--text-scale-ratio));--text-md: calc(var(--text-sm) * var(--text-scale-ratio) * var(--text-scale-ratio));--text-lg: calc(var(--text-md) * var(--text-scale-ratio));--text-xl: calc(var(--text-lg) * var(--text-scale-ratio));--text-xxl: calc(var(--text-xl) * var(--text-scale-ratio));--text-xxxl: calc(var(--text-xxl) * var(--text-scale-ratio));--text-xxxxl: calc(var(--text-xxxl) * var(--text-scale-ratio));}';\r\n\r\n    loadTypographyStyleTag(textVariables + getTypographyStyle(headingValues, 'h1, h2, h3, h4', typography) + getTypographyStyle(bodyValues, 'body', typography));\r\n\r\n    setTypographyCssVariables(headingValues, bodyValues, typography, mq);\r\n}\r\n;\r\n\r\nexport function loadTypographyDefaultStyle(bool, mq) {\r\n    // set variables - get values for --text-base-size and --text-scale-ratio\r\n    var bodyStyle = '--font-primary: Inter, system-ui, sans-serif;--text-base-size: 1em;--text-scale-ratio: 1.2;--text-unit: 1em;--body-line-height: 1.4;--heading-line-height: 1.2;--font-primary-capital-letter: 1;'\r\n        ,\r\n        allStyle = ' --text-xs: calc((var(--text-unit) / var(--text-scale-ratio)) / var(--text-scale-ratio));--text-sm: calc(var(--text-xs) * var(--text-scale-ratio));--text-md: calc(var(--text-sm) * var(--text-scale-ratio) * var(--text-scale-ratio));--text-lg: calc(var(--text-md) * var(--text-scale-ratio));--text-xl: calc(var(--text-lg) * var(--text-scale-ratio));--text-xxl: calc(var(--text-xl) * var(--text-scale-ratio));--text-xxxl: calc(var(--text-xxl) * var(--text-scale-ratio));--text-xxxxl: calc(var(--text-xxxl) * var(--text-scale-ratio));';\r\n\r\n    bodyStyle = ':root{' + bodyStyle + '}';\r\n    allStyle = ':root, *{' + allStyle + '}';\r\n\r\n    var bodyResStyle = '@media (min-width:64rem){:root{--text-base-size: 1.25em;--text-scale-ratio: 1.25;}}';\r\n\r\n    var headingStyle = 'h1, h2, h3, h4 {font-family: var(--font-primary);font-weight: 700;}';\r\n\r\n    loadTypographyStyleTag(bodyStyle + allStyle + headingStyle + bodyResStyle);\r\n\r\n    // append font link\r\n    var fontLink = '<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">';\r\n    var typographyStyle = $('#typography-style');\r\n    $(fontLink).insertAfter(typographyStyle);\r\n}\r\n;\r\n\r\nexport function loadTypographyStyleTag(styleContent) {\r\n    var defaultStyle = 'mark {background-color: hsla(var(--color-accent-h), var(--color-accent-s), var(--color-accent-l), 0.2);color: inherit;}.text-component {--line-height-multiplier: 1;--text-vspace-multiplier: 1;}.text-component blockquote {padding-left: 1em;border-left: 4px solid var(--color-contrast-low);}.text-component hr {background: var(--color-contrast-low);height: 1px;}.text-component figcaption {font-size: var(--text-sm);color: var(--color-contrast-medium);}.article {--body-line-height: 1.58;--text-vspace-multiplier: 1.2;}';\r\n    var style = '<style id=\"typography-style\">' + styleContent + defaultStyle + '</style>';\r\n    $('#typography-style').remove();\r\n\r\n    var baseStyle = $('#cd-base-part-1');\r\n    $(style).insertAfter(baseStyle);\r\n}\r\n\r\nexport function loadTypographyCssVarStyleGuide(typography) {\r\n    var code = ':root {';\r\n    // font family definition\r\n    var fontFamilies = ''\r\n        , fontFamilyClasses = '';\r\n    var scale = '';\r\n    var textVariables = '';\r\n    var scaleResponsive = '';\r\n    if (typography['fontFamilies'] && typography['fontFamilyLabels']) {\r\n        for (var i = 0; i < typography['fontFamilies'].length; i++) {\r\n            if (typography['fontFamilyLabels'][i]) {\r\n                fontFamilies = fontFamilies + typography['fontFamilyLabels'][i] + ': ' + typography['fontFamilies'][i] + ';';\r\n                fontFamilyClasses = fontFamilyClasses + typography['fontFamilyLabels'][i].replace('--', '.') + '{font-family: var(' + typography['fontFamilyLabels'][i] + ');}';\r\n            }\r\n        }\r\n    }\r\n    code = code + fontFamilies;\r\n    if (typography['baseSize'] && typography['scaleRatio'] && typography['bodyInfo'] && typography['headingInfo']) {\r\n        scale = getTypographyScaleVar(typography, 0);\r\n        scaleResponsive = getTypographyScaleVarRes(typography);\r\n        textVariables = 'root, * {--text-xs: calc((var(--text-unit) / var(--text-scale-ratio)) / var(--text-scale-ratio));--text-sm: calc(var(--text-xs) * var(--text-scale-ratio));--text-md: calc(var(--text-sm) * var(--text-scale-ratio) * var(--text-scale-ratio));--text-lg: calc(var(--text-md) * var(--text-scale-ratio));--text-xl: calc(var(--text-lg) * var(--text-scale-ratio));--text-xxl: calc(var(--text-xl) * var(--text-scale-ratio));--text-xxxl: calc(var(--text-xxl) * var(--text-scale-ratio));--text-xxxxl: calc(var(--text-xxxl) * var(--text-scale-ratio));}'\r\n    }\r\n\r\n    code = code + scale + '}' + textVariables + scaleResponsive + fontFamilyClasses;\r\n    return code;\r\n}\r\n;\r\n\r\nexport function loadTypographyStyleStyleGuide(typography) {\r\n    var mq = ['', '32rem', '48rem', '64rem', '80rem', '90rem'];\r\n    var code = '';\r\n    if (typography['bodyInfo'] && typography['headingInfo']) {\r\n        for (var i = 0; i < mq.length; i++) {\r\n            var style = '';\r\n            if (typography['bodyInfo'][i]) {\r\n                var bodyStyle = getTypographyStyle(typography['bodyInfo'][i], 'body', typography);\r\n                style = (i > 0) ? style + '@media (min-width:' + mq[i] + ') {' + bodyStyle + '}' : style + bodyStyle;\r\n            }\r\n            if (typography['headingInfo'][i]) {\r\n                var headingStyle = getTypographyStyle(typography['headingInfo'][i], 'h1, h2, h3, h4', typography);\r\n                style = (i > 0) ? style + '@media (min-width:' + mq[i] + ') {' + headingStyle + '}' : style + headingStyle;\r\n            }\r\n            code = code + style;\r\n        }\r\n    }\r\n\r\n    return code;\r\n}\r\n;\r\n\r\nexport function getTypographyScaleVar(typography, index) {\r\n    var code = '';\r\n    if (typography['baseSize'][index])\r\n        code = code + '--text-base-size: ' + typography['baseSize'][index] + ';';\r\n    if (typography['scaleRatio'][index])\r\n        code = code + '--text-scale-ratio: ' + typography['scaleRatio'][index] + ';';\r\n    if (typography['bodyInfo'][index] && typography['bodyInfo'][index][2])\r\n        code = code + '--body-line-height: ' + typography['bodyInfo'][index][2] + ';';\r\n    if (typography['headingInfo'][index] && typography['headingInfo'][index][2])\r\n        code = code + '--heading-line-height: ' + typography['headingInfo'][index][2] + ';';\r\n    if (index == 0)\r\n        code = code + '--text-unit: ' + getTextUnit(typography);\r\n    return code;\r\n}\r\n\r\nexport function getTextUnit(typography) {\r\n    var textUnit = '1em';\r\n    if (typography['baseSize'][0] && (typography['baseSize'][0].indexOf('px') > -1 || typography['baseSize'][0].indexOf('rem') > -1))\r\n        textUnit = 'var(--text-base-size)';\r\n    return textUnit;\r\n}\r\n;\r\n\r\nexport function getTypographyScaleVarRes(typography) {\r\n    var mq = ['', '32rem', '48rem', '64rem', '80rem', '90rem'];\r\n    var code = '';\r\n    for (var i = 1; i < mq.length; i++) {\r\n        code = code + '@media (min-width:' + mq[i] + ') {:root{' + getTypographyScaleVar(typography, i) + '}}'\r\n    }\r\n    return code;\r\n}\r\n\r\nexport function loadSpacingStyle(spacing, mq) {\r\n    var spaceUnit = getValidResponsiveValue(Object.values(spacing['spaceUnit']), mq, false)\r\n        , spaceRatioCustom = getSpaceRatioCustom(spacing['customSpaceRatio']);\r\n    // var srList = getSpacingValues(Object.values(spacing['spaceRatio']), spaceUnit, mq, spaceRatioCustom),\r\n\r\n    // this will return only the list of the multiplier (not including the --space-unit)\r\n    var srList = getSpacingMultiplier(Object.values(spacing['spaceRatio']), mq, spaceRatioCustom)\r\n        , paddingVariable = srList[getValidResponsiveValue(Object.values(spacing['padding']), mq, false) - 1];\r\n    updateSpacingCssVariables(srList, paddingVariable, spaceUnit);\r\n}\r\n;\r\n\r\nexport function loadSpacingDefaultStyle(mq) {\r\n    var responsiveSpacing = '@media (min-width:64rem){:root{--space-unit:  1.25em;}}';\r\n    // var style = '<style id=\"spacing-style\">'+responsiveSpacing+'</style>';\r\n    // $('#spacing-style').remove();\r\n\r\n    // var baseStyle = $('#cd-base-part-1');\r\n    // $(style).insertAfter(baseStyle);\r\n    // load after component style -> this will need to overwrite the default spacing style\r\n    // $('head').append(style);\r\n    loadSpacingStyleTag(responsiveSpacing);\r\n}\r\n;\r\n\r\nexport function loadSpacingStyleTag(style) {\r\n    var style = '<style id=\"spacing-style\">' + style + '</style>';\r\n    $('#spacing-style').remove();\r\n    var baseStyle = $('#cd-base-part-1');\r\n    $(style).insertAfter(baseStyle);\r\n}\r\n;\r\n\r\nexport function setTypographyCssVariables(headingValues, bodyValues, typography, mq) {\r\n    //css variables\r\n    if (headingValues[2] && headingValues[2] != '') {\r\n        setCssVariable('--heading-line-height', headingValues[2]);\r\n        // setElementCssVariable('text-component', '--heading-line-height', headingValues[2]);\r\n    }\r\n    if (bodyValues[2] && bodyValues[2] != '') {\r\n        setCssVariable('--body-line-height', bodyValues[2]);\r\n        // setElementCssVariable('text-component', '--body-line-height', bodyValues[2]);\r\n    }\r\n\r\n    setCssVariable('--text-base-size', getValidResponsiveValue(Object.values(typography['baseSize']), mq, false));\r\n    setCssVariable('--text-scale-ratio', getValidResponsiveValue(Object.values(typography['scaleRatio']), mq, false));\r\n    setCssVariable('--text-unit', getTextUnit(typography));\r\n}\r\n;\r\n\r\nexport function getTypographyArray(obj) {\r\n    var arr = [];\r\n    for (var i = 0; i < 6; i++) {\r\n        arr.push(Object.values(obj[i]));\r\n    }\r\n    return arr;\r\n}\r\n;\r\n\r\nexport function getTypographyStyle(array, selector, typography) {\r\n    var style = '';\r\n    if (parseInt(array[0]) && parseInt(array[0]) != 0) {\r\n        var fontIds = Object.values(typography['fontFamilyIds']);\r\n        // importantCss = selector == 'body' ? '!important' : '';\r\n        style = style + 'font-family: ' + typography['fontFamilies'][fontIds.indexOf(parseInt(array[0]))] + ';';\r\n    }\r\n    if (array[1] && array[1] != '')\r\n        style = style + 'font-weight: ' + array[1] + ';';\r\n    return selector + '{' + style + '}';\r\n}\r\n;\r\n// export function updateSpacingCssVariables(list, padding, spaceUnit) {\r\n// \tsetCssVariable('--space-unit', spaceUnit);\r\n// \tsetCssVariable('--component-padding', padding);\r\n// \tfor(var i = 0; i < list.length; i++) {\r\n// \t\tsetCssVariable(paddingVariables[i], list[i]);\r\n// \t}\r\n// };\r\n\r\nexport function updateSpacingCssVariables(list, padding, spaceUnit) {\r\n    setCssVariable('--space-unit', spaceUnit);\r\n    var spacingVariables = '--component-padding:' + 'calc(' + padding + ' * var(--space-unit));';\r\n    for (var i = 0; i < list.length; i++) {\r\n        spacingVariables = spacingVariables + paddingVariables[i] + ': calc(' + list[i] + ' * var(--space-unit));';\r\n    }\r\n    spacingVariables = 'root, *{' + spacingVariables + '}';\r\n    loadSpacingStyleTag(spacingVariables);\r\n}\r\n;\r\n\r\nexport function getSpacingValues(spaceRatio, su, mq, spaceRatioCustom) {\r\n    var list = spaceRatioUnit[getValidResponsiveValue(spaceRatio, mq, false)];\r\n    if (list == '') {\r\n        //custom scale\r\n        list = getSpacingCustomScaleRatio(mq, spaceRatioCustom, spaceRatio);\r\n    }\r\n\r\n    var spaceList = [];\r\n    var suArray = getValueUnit(su);\r\n    if (suArray[0] === false) {\r\n        suArray[0] = 1;\r\n        suArray[1] = 'em';\r\n    }\r\n    for (var i = 0; i < list.length; i++) {\r\n        var updated = Math.round(list[i] * suArray[0] * 1000) / 1000;\r\n        spaceList.push(updated + suArray[1]);\r\n    }\r\n    return spaceList;\r\n}\r\n;\r\n\r\nexport function getSpacingMultiplier(spaceRatio, mq, spaceRatioCustom) {\r\n    var list = spaceRatioUnit[getValidResponsiveValue(spaceRatio, mq, false)];\r\n    if (list == '') {\r\n        //custom scale\r\n        list = getSpacingCustomScaleRatio(mq, spaceRatioCustom, spaceRatio);\r\n    }\r\n    return list;\r\n}\r\n;\r\n\r\nexport function getSpacingCustomScaleRatio(mq, spaceRatioCustom, spaceRatio) {\r\n    var array = [];\r\n    for (var i = 0; i < spaceRatioUnit[1].length; i++) {\r\n        array[i] = getSpacingValidResponsiveValueCustomRatio(spaceRatioCustom[i], mq, spaceRatio);\r\n    }\r\n    return array;\r\n}\r\n;\r\n\r\nexport function getSpacingValidResponsiveValueCustomRatio(spaceArray, index, spaceRatio) {\r\n    if (index == 0)\r\n        return spaceArray[0];\r\n    var item = spaceArray[index];\r\n    if (item !== false && item !== '' && spaceRatio[index] == 6) {\r\n        //item defined and space ratio set to custom\r\n        return item;\r\n    } else {\r\n        return getSpacingValidResponsiveValueCustomRatio(spaceArray, index - 1, spaceRatio);\r\n    }\r\n}\r\n;\r\n\r\nexport function getSpaceRatioCustom(obj) {\r\n    var arr = [];\r\n    for (var i = 0; i < 11; i++) {\r\n        arr.push(Object.values(obj[i]));\r\n    }\r\n    return arr;\r\n}\r\n;\r\n\r\nexport function loadButtonsStyle(buttons) {\r\n    //convert obj to array;\r\n    var buttonsArray = getButtonsArrayStyle(buttons['style']);\r\n    var btnsList = ['btn', 'btn--primary', 'btn--subtle', 'btn--accent', 'btn--disabled', 'btn--sm', 'btn--md', 'btn--lg']\r\n        , statusList = ['none', ':active', ':hover', ':focus']\r\n        , statusPriorityList = ['none', ':hover', ':focus', ':active']\r\n        , code = '';\r\n\r\n    for (var i = 0; i < btnsList.length; i++) {\r\n        code = code + buttonsCodeStyle(buttonsArray[btnsList[i]], btnsList[i], statusList, statusPriorityList, false, true);\r\n    }\r\n    // get code for btn--icon\r\n    var btnIconCode = buttonIconCodeStyle(buttonsArray['btn']);\r\n    // get code for button variables\r\n    var btnVariables = buttonVariables(buttonsArray);\r\n    loadButtonsStyleTag(btnVariables + code + btnIconCode);\r\n}\r\n;\r\n\r\nexport function loadButtonsStyleStyleGuide(buttons) {\r\n    // buttonsArray = buttons['btnStyle']\r\n    if (!buttons['btnStyle'])\r\n        return '';\r\n    var buttonsArray = buttons['btnStyle'];\r\n    // button-icon class\r\n    var btnIconCode = '';\r\n    if (buttonsArray['btn']) {\r\n        btnIconCode = buttonIconCodeStyle(buttonsArray['btn']);\r\n    }\r\n    // button CSS variables\r\n    var btnVariables = buttonVariables(buttonsArray);\r\n    // buttons style\r\n    var btnsList = ['btn', 'btn--primary', 'btn--subtle', 'btn--accent', 'btn--disabled', 'btn--sm', 'btn--md', 'btn--lg']\r\n        , statusList = ['none', ':active', ':hover', ':focus']\r\n        , statusPriorityList = ['none', ':hover', ':focus', ':active']\r\n        , btnStyle = '';\r\n    // default btns style\r\n    for (var i = 0; i < btnsList.length; i++) {\r\n        btnStyle = btnStyle + buttonsCodeStyle(buttonsArray[btnsList[i]], btnsList[i], statusList, statusPriorityList, false, true);\r\n    }\r\n    // custom btns code\r\n    if (buttons['customBtns'] && buttons['customBtns'].length > 0) {\r\n        for (var i = 0; i < buttons['customBtns'].length; i++) {\r\n            btnStyle = btnStyle + buttonsCodeStyle(buttonsArray[buttons['customBtns'][i][1]], buttons['customBtns'][i][0], statusList, statusPriorityList, false, true);\r\n        }\r\n    }\r\n\r\n    return btnVariables + btnStyle + btnIconCode;\r\n}\r\n;\r\n\r\nexport function loadSharedStyleStyleGuide(shared_style) {\r\n    var statusList = ['none', ':active', ':hover', ':focus']\r\n        , statusPriorityList = ['none', ':hover', ':focus', ':active']\r\n        , btnStyle = '';\r\n    if (shared_style['customStyles'] && shared_style['customStyles'].length > 0) {\r\n        for (var i = 0; i < shared_style['customStyles'].length; i++) {\r\n            btnStyle = btnStyle + buttonsCodeStyle(shared_style.customStyleArray[shared_style['customStyles'][i][1]], escapeCSScharacters(shared_style['customStyles'][i][0]), statusList, statusPriorityList, false);\r\n\r\n        }\r\n    }\r\n    if (shared_style['customTextStyles'] && shared_style['customTextStyles'].length > 0) {\r\n        for (var i = 0; i < shared_style['customTextStyles'].length; i++) {\r\n            btnStyle = btnStyle + buttonsCodeStyle(shared_style.customTextStyleArray[shared_style['customTextStyles'][i][1]], escapeCSScharacters(shared_style['customTextStyles'][i][0]), statusList, statusPriorityList, false);\r\n\r\n        }\r\n    }\r\n    return btnStyle;\r\n}\r\n;\r\n\r\nexport function escapeCSScharacters(label) {\r\n    label = label.replace(/\\:/g, '\\\\:');\r\n    label = label.replace(/\\%/g, '\\\\%');\r\n    label = label.replace(/\\//g, '\\\\/');\r\n    return label\r\n}\r\n;\r\n\r\nexport function loadButtonsDefaultStyle(mq) {\r\n    var btnsStyle = ':root {--btn-font-size: 1em;--btn-padding-x: var(--space-sm); --btn-padding-y: var(--space-xxs); -btn-radius: 0.25em;}.btn {line-height: 1.2;box-shadow: var(--shadow-xs);-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;transition: .2s; will-change: transform;}.btn:hover {cursor: pointer;box-shadow: var(--shadow-sm);}.btn:focus {box-shadow: 0px 0px 0px 2px hsla(var(--color-contrast-higher-h), var(--color-contrast-higher-s), var(--color-contrast-higher-l), 0.15);outline: none;}.btn:active {transform: translateY(2px);}.btn--primary {background-color: var(--color-primary);color: var(--color-white)}.btn--primary:hover {background-color: var(--color-primary-dark);}.btn--primary:focus {box-shadow: 0px 0px 0px 2px hsla(var(--color-primary-h), var(--color-primary-s), var(--color-primary-l), 0.2);}.btn--subtle {background-color: var(--color-contrast-lower);color: var(--color-contrast-higher);}.btn--accent {background-color: var(--color-accent);color: var(--color-white);}.btn--accent:hover {background-color: var(--color-accent-dark);}.btn--accent:focus {box-shadow: 0px 0px 0px 2px hsla(var(--color-accent-h), var(--color-accent-s), var(--color-accent-l), 0.2);}.btn--disabled, .btn[disabled], .btn[readonly] {opacity: 0.6;cursor: not-allowed;}.btn--sm{font-size: 0.8em;}.btn--md{font-size: 1.2em;}.btn--lg{font-size: 1.4em;}';\r\n    loadButtonsStyleTag(btnsStyle);\r\n}\r\n;\r\n\r\nexport function buttonVariables(btnStyle) {\r\n    var sizes = [['btn', ''], ['btn--sm', '-sm'], ['btn--md', '-md'], ['btn--lg', '-lg']];\r\n    var string = '';\r\n    for (var i = 0; i < sizes.length; i++) {\r\n        if (btnStyle[sizes[i][0]] && btnStyle[sizes[i][0]]['none'] && btnStyle[sizes[i][0]]['none']['typography']) {\r\n            var fontBase = getButtonsFontSizeValue(btnStyle[sizes[i][0]]['none']['typography']);\r\n            if (fontBase != '')\r\n                string = string + '--btn-font-size' + sizes[i][1] + ':' + fontBase + ';'\r\n        }\r\n    }\r\n    if (btnStyle['btn'] && btnStyle['btn']['none'] && btnStyle['btn']['none']['padding'] && btnStyle['btn']['none']['padding'][1]) {\r\n        string = string + '--btn-padding-x:' + getButtonsPaddingValue(btnStyle['btn']['none']['padding'][1]) + ';';\r\n    }\r\n    if (btnStyle['btn'] && btnStyle['btn']['none'] && btnStyle['btn']['none']['padding'] && btnStyle['btn']['none']['padding'][0]) {\r\n        string = string + '--btn-padding-y:' + getButtonsPaddingValue(btnStyle['btn']['none']['padding'][0]) + ';';\r\n    }\r\n    if (btnStyle['btn'] && btnStyle['btn']['none'] && btnStyle['btn']['none']['appearance']) {\r\n        if (btnStyle['btn']['none']['appearance'][2]) {\r\n            string = string + '--btn-radius:' + btnStyle['btn']['none']['appearance'][2] + ';';\r\n        } else {\r\n            string = string + '--btn-radius: 0em;';\r\n        }\r\n    }\r\n\r\n    return ':root{' + string + '}';\r\n}\r\n;\r\n\r\nexport function loadButtonsStyleTag(style) {\r\n    var styleEl = '<style id=\"buttons-style\">' + style + '</style>';\r\n    var baseStyle = $('#cd-base-part-1');\r\n    $(styleEl).insertAfter(baseStyle);\r\n    // $('head').append(styleEl);\r\n}\r\n;\r\n\r\nexport function loadFormsStyle(forms) {\r\n    var formsArray = getButtonsArrayStyle(forms['style']);\r\n    var formsList = ['form-control', '[disabled]', '[aria-invalid]', 'legend', 'form-label']\r\n        , statusList = ['none', ':active', ':hover', ':focus']\r\n        , statusPriorityList = ['none', ':hover', ':focus', ':active']\r\n        , code = '';\r\n    code = resetFormsStyleComponents();\r\n\r\n    for (var i = 0; i < formsList.length; i++) {\r\n        code = code + buttonsCodeStyle(formsArray[formsList[i]], formsList[i], statusList, statusPriorityList, true);\r\n    }\r\n    // get code for form variables\r\n    var btnVariables = formVariables(formsArray['form-control']);\r\n    loadFormsStyleTag(btnVariables + code);\r\n}\r\n;\r\n\r\nexport function loadFormsStyleStyleGuide(form) {\r\n    // form elements style\r\n    if (!form['btnStyle'])\r\n        return '';\r\n    var formsArray = form['btnStyle'];\r\n    var formsList = ['form-control', '[disabled]', '[aria-invalid]', 'legend', 'form-label']\r\n        , statusList = ['none', ':active', ':hover', ':focus']\r\n        , statusPriorityList = ['none', ':hover', ':focus', ':active']\r\n        , formStyle = '';\r\n    for (var i = 0; i < formsList.length; i++) {\r\n        formStyle = formStyle + buttonsCodeStyle(formsArray[formsList[i]], formsList[i], statusList, statusPriorityList, true);\r\n    }\r\n    // get code for form variables\r\n    var formCSSVariables = formVariables(formsArray['form-control']);\r\n    return formStyle + formCSSVariables;\r\n}\r\n;\r\n\r\nexport function formVariables(formStyle) {\r\n    var string = '';\r\n    if (formStyle && formStyle['none'] && formStyle['none']['padding'] && formStyle['none']['padding'][1]) {\r\n        string = string + '--form-control-padding-x:' + getButtonsPaddingValue(formStyle['none']['padding'][1]) + ';';\r\n    }\r\n    if (formStyle && formStyle['none'] && formStyle['none']['padding'] && formStyle['none']['padding'][0]) {\r\n        string = string + '--form-control-padding-y:' + getButtonsPaddingValue(formStyle['none']['padding'][0]) + ';';\r\n    }\r\n    if (formStyle && formStyle['none'] && formStyle['none']['appearance']) {\r\n        if (formStyle['none']['appearance'][2]) {\r\n            string = string + '--form-control-radius:' + formStyle['none']['appearance'][2] + ';';\r\n        } else {\r\n            string = string + '--form-control-radius: 0em;';\r\n        }\r\n\r\n    }\r\n    return ':root{' + string + '}';\r\n}\r\n;\r\n\r\nexport function loadFormsDefaultStyle(mq) {\r\n    var formStyle = ':root {--form-control-padding-x: var(--space-xs);--form-control-padding-y: var(--space-xxs);--form-control-radius: 0.25em;}.form-control {line-height: 1.2;background-color: var(--color-bg);border: 2px solid var(--color-contrast-low);transition: 0.2s;}.form-control:focus {border-color: var(--color-primary);box-shadow: 0px 0px 0px 2px hsla(var(--color-primary-h), var(--color-primary-s),var(--color-primary-l), 0.2);outline: none;}.form-control[aria-invalid=\"true\"], .form-control--error {border-color: var(--color-error);}.form-control[aria-invalid=\"true\"]:focus, .form-control--error:focus {border-color: var(--color-error);box-shadow: 0px 0px 0px 2px hsla(var(--color-error-h), var(--color-error-s),var(--color-error-l), 0.2);}.form-control--disabled, .form-control[disabled], .form-control[readonly] {cursor: not-allowed;}.form-label {font-size: var(--text-sm);}.form-legend{font-size: var(--text-md);}';\r\n    formStyle = formStyle + '.form-control::placeholder{opacity: 1;color: var(--color-contrast-medium);}';\r\n    loadFormsStyleTag(formStyle);\r\n}\r\n;\r\n\r\nexport function loadFormsStyleTag(style) {\r\n    var defaultStyle = '.form-error-msg {background-color: hsla(var(--color-error-h),var(--color-error-s), var(--color-error-l), 0.2);color: inherit;border-radius: var(--radius-md);padding: var(--space-xs);}';\r\n    var styleEl = '<style id=\"forms-style\">' + style + defaultStyle + '</style>';\r\n    var baseStyle = $('#cd-base-part-1');\r\n    $(styleEl).insertAfter(baseStyle);\r\n    // $('head').append(styleEl);\r\n}\r\n;\r\n\r\nexport function boxShadowIsDefined(array) {\r\n    return (array && array[0] && array[0][1] && array[0][1] != '');\r\n}\r\n;\r\n\r\nexport function getButtonsArrayStyle(obj) {\r\n    var array = [];\r\n    for (var property in obj) {\r\n        if (obj.hasOwnProperty(property)) {\r\n            array[property] = [];\r\n            for (var subproperty in obj[property]) {\r\n                if (obj[property].hasOwnProperty(subproperty)) {\r\n                    array[property][subproperty] = [];\r\n                    for (var val in obj[property][subproperty]) {\r\n                        if (obj[property][subproperty].hasOwnProperty(val)) {\r\n                            if (val == 'border' || val == 'textShadow' || val == 'shadow' || val == 'transform' || val == 'transition') {\r\n                                array[property][subproperty][val] = [];\r\n                                for (var subVal in obj[property][subproperty][val]) {\r\n                                    if (obj[property][subproperty][val].hasOwnProperty(subVal)) {\r\n                                        array[property][subproperty][val][subVal] = Object.values(obj[property][subproperty][val][subVal]);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                array[property][subproperty][val] = Object.values(obj[property][subproperty][val]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return array;\r\n}\r\n;\r\n\r\nexport function buttonsCodeStyle(style, btnLabel, statusList, statusPriorityList, isDemoReset, isButton) {\r\n    var string = '';\r\n    if (!style)\r\n        return string;\r\n    var btnLabelmodified = btnLabel;\r\n    if (btnLabel == '[disabled]') {\r\n        btnLabelmodified = 'form-control--disabled, .form-control[disabled], .form-control[readonly]';\r\n    } else if (btnLabel == '[aria-invalid]') {\r\n        btnLabelmodified = 'form-control[aria-invalid=\"true\"], .form-control--error';\r\n    } else if (btnLabel == 'legend') {\r\n        btnLabelmodified = 'form-legend';\r\n    } else if (btnLabel == 'btn--disabled') {\r\n        btnLabelmodified = 'btn--disabled, .btn[disabled], .btn[readonly]';\r\n    }\r\n    var btnHasTransform = isButton && buttonsHasTransformStyle(style, statusPriorityList);\r\n    for (var i = 0; i < statusPriorityList.length; i++) {\r\n        var styleLabel = (i == 0) ? '.' + btnLabelmodified : setStatusList('.' + btnLabelmodified, statusPriorityList[i]);\r\n        var newCode = getButtonCode(style[statusPriorityList[i]], '', true, btnLabel, statusPriorityList[i], isDemoReset, (btnHasTransform && i == 0));\r\n        newCode = newCode.trim();\r\n        if (newCode.slice(-1) == '}') {\r\n            string = string + styleLabel + '{' + newCode;\r\n        } else {\r\n            string = string + styleLabel + '{' + newCode + '}';\r\n        }\r\n    }\r\n    string = string.replace(/\\n/g, '');\r\n    return string;\r\n}\r\n;\r\n\r\nexport function setStatusList(label, status) {\r\n    // e.g., if label = '.form-control[aria-invalid=\"true\"], .form-control--error' and status = ':focus', return '.form-control[aria-invalid=\"true\"]:focus, .form-control--error:focus'\r\n    var labelArray = label.split(',');\r\n    if (labelArray.length == 1) {\r\n        return label + status;\r\n    } else {\r\n        var newLabel = ''\r\n        for (var i = 0; i < labelArray.length; i++) {\r\n            if (i > 0)\r\n                newLabel = newLabel + ',';\r\n            newLabel = newLabel + labelArray[i] + status;\r\n        }\r\n        return newLabel;\r\n    }\r\n}\r\n;\r\n\r\nexport function buttonIconCodeStyle(btnStyle) {\r\n    var code = '';\r\n    if (btnStyle && btnStyle['none'] && btnStyle['none']['padding'] && btnStyle['none']['padding'][0] && btnStyle['none']['padding'][0] != 0) {\r\n        code = '.btn--icon {padding: ' + spacingArray[btnStyle['none']['padding'][0]] + ';}';\r\n    }\r\n    return code;\r\n}\r\n;\r\n\r\nexport function buttonsHasTransformStyle(style, priorityList) {\r\n    var hasTransform = false;\r\n    for (var i = 1; i < priorityList.length; i++) {\r\n        if (!style[priorityList[i]])\r\n            return;\r\n        var transform = style[priorityList[i]]['transform'];\r\n        if (transform.length > 1 || (transform.length > 0 && transform[0][0] != 0)) {\r\n            hasTransform = true;\r\n            break;\r\n        }\r\n    }\r\n    return hasTransform;\r\n}\r\n;\r\n\r\nexport function getButtonCode(array, spacing, reset, btnLabel, btnStatus, isDemoReset, btnHasTransform) {\r\n    var string = '';\r\n    for (var property in array) {\r\n        switch (property) {\r\n            case 'appearance':\r\n                string = string + getButtonsAppearanceStyle(array[property], spacing, reset, btnLabel, btnStatus);\r\n                break;\r\n            case 'padding':\r\n                string = string + getButtonsPaddingStyle(array[property], spacing, reset, btnLabel, btnStatus);\r\n                break;\r\n            case 'margin':\r\n                string = string + getButtonsMarginStyle(array[property], spacing, reset);\r\n                break;\r\n            case 'border':\r\n                string = string + getButtonsBorderStyle(array[property], spacing, reset);\r\n                break;\r\n            case 'typography':\r\n                string = string + getButtonsTypographyStyle(array[property], spacing, reset, btnLabel, btnStatus);\r\n                break;\r\n            case 'textShadow':\r\n                string = string + getButtonsTextShadowStyle(array[property], spacing, reset);\r\n                break;\r\n            case 'shadow':\r\n                string = string + getButtonsShadowStyle(array[property], spacing, reset, isDemoReset);\r\n                break;\r\n            case 'outline':\r\n                string = string + getButtonsOutlineStyle(array[property], spacing, reset);\r\n                break;\r\n            case 'transform':\r\n                string = string + getButtonsTransformStyle(array[property], spacing, reset);\r\n                break;\r\n            case 'transition':\r\n                string = string + getButtonsTransitionStyle(array[property], spacing, reset);\r\n                break;\r\n            case 'placeholder':\r\n                string = string + getButtonsPlaceholderStyle(array[property], spacing, reset, btnLabel, btnStatus);\r\n                break;\r\n        }\r\n    }\r\n    if (btnHasTransform)\r\n        string = string + '\\n' + spacing + 'will-change: transform;';\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsAppearanceStyle(array, spacing, reset, btnLabel, btnStatus) {\r\n    var string = '';\r\n    if (array[0]) {\r\n        if (array[0].indexOf('--gradient-') > -1) {\r\n            string = string + '\\n' + spacing + getGradientBgStyle(array[0]);\r\n        } else {\r\n            string = string + '\\n' + spacing + 'background: ' + getColorValue(array[0], reset) + ';';\r\n        }\r\n    }\r\n    if (array[1])\r\n        string = string + '\\n' + spacing + 'color: ' + getColorValue(array[1], reset) + ';';\r\n    if (reset && reset != true && btnStatus == 'none' && (btnLabel == 'btn' || btnLabel == 'form-control')) {// for copy code -> no need to add border-radius in code -> css variables already set\r\n    } else {\r\n        if (array[7] && array[7] > 0) {\r\n            string = string + '\\n' + spacing + 'border-radius: ' + borderRadiusValues[array[7]] + ';';\r\n        } else if (array[2] && array[2] != '') {\r\n            string = string + '\\n' + spacing + 'border-radius: ' + array[2] + ';';\r\n        }\r\n    }\r\n    if (array[3] && array[3] != '')\r\n        string = string + '\\n' + spacing + 'opacity: ' + array[3] + ';';\r\n    if (array[4] && array[4] != 0)\r\n        string = string + '\\n' + spacing + 'cursor: ' + getCursorValue(array[4]) + ';';\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getGradientBgStyle(label) {\r\n    var angle = label.indexOf('-right') > -1 ? '90deg' : '180deg'\r\n        , niceLabel = label.replace('-right', '').replace('-bottom', '');\r\n    return 'background: linear-gradient(' + angle + ', var(' + niceLabel + '-stop-1), var(' + niceLabel + '-stop-2));';\r\n}\r\n;\r\n\r\nexport function getButtonsPaddingStyle(array, spacing, reset, btnLabel, btnStatus) {\r\n    //Y - X\r\n    // for copy code -> no need to add padding in code -> css variables already set\r\n    if (reset && reset != true && btnStatus == 'none' && (btnLabel == 'btn' || btnLabel == 'form-control'))\r\n        return '';\r\n    var string = '';\r\n    if (array.length < 1)\r\n        return string;\r\n    if (array[0] != 0 && array[1] != 0) {\r\n        string = string + '\\n' + spacing + 'padding: ' + spacingArray[array[0]] + ' ' + spacingArray[array[1]] + ';';\r\n    } else {\r\n        if (array[0] != 0)\r\n            string = string + '\\n' + spacing + 'padding-top: ' + spacingArray[array[0]] + ';\\n' + spacing + 'padding-bottom: ' + spacingArray[array[0]] + ';';\r\n        if (array[1] != 0)\r\n            string = string + '\\n' + spacing + 'padding-left: ' + spacingArray[array[1]] + ';\\n' + spacing + 'padding-right: ' + spacingArray[array[1]] + ';';\r\n    }\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsPaddingValue(value) {\r\n    // setting css variables for copy code only\r\n    var padding = '';\r\n    if (value != 0)\r\n        padding = spacingArray[value];\r\n    return padding;\r\n}\r\n;\r\n\r\nexport function getButtonsMarginStyle(array, spacing, reset) {\r\n    //top left right bottom\r\n    var string = '';\r\n    if (array.length < 1)\r\n        return string;\r\n    if (array[0] != 0 && array[1] != 0 && array[2] != 0 && array[3] != 0) {\r\n        string = string + '\\n' + spacing + 'margin: ' + spacingArray[array[0]] + ' ' + spacingArray[array[2]] + ' ' + spacingArray[array[3]] + ' ' + spacingArray[array[1]] + ';';\r\n    } else {\r\n        if (array[0] != 0)\r\n            string = string + '\\n' + spacing + 'margin-top: ' + spacingArray[array[0]] + ';';\r\n        if (array[1] != 0)\r\n            string = string + '\\n' + spacing + 'margin-left: ' + spacingArray[array[1]] + ';';\r\n        if (array[2] != 0)\r\n            string = string + '\\n' + spacing + 'margin-right: ' + spacingArray[array[2]] + ';';\r\n        if (array[3] != 0)\r\n            string = string + '\\n' + spacing + 'margin-bottom: ' + spacingArray[array[3]] + ';';\r\n    }\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsBorderStyle(array, spacing, reset) {\r\n    var string = ''\r\n        , colorVariables = '';\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (array[i][3] == 0)\r\n            string = string + '\\n' + spacing + getBorderType(array[i][1]) + ': none;';\r\n        else if (array[i][2] == '') {\r\n            var app = array.length > 1 ? '-' + (i + 1) : '';\r\n            var variable = getColorFbIos(array[i][0], '--color-border' + app, spacing, reset);\r\n            colorVariables = colorVariables + variable[0];\r\n            string = string + '\\n' + spacing + getBorderType(array[i][1]) + '-color: ' + variable[1] + ';';\r\n        } else {\r\n            var app = array.length > 1 ? '-' + (i + 1) : '';\r\n            var variable = getColorFbIos(array[i][0], '--color-border' + app, spacing, reset);\r\n            colorVariables = colorVariables + variable[0];\r\n            string = string + '\\n' + spacing + getBorderType(array[i][1]) + ': ' + array[i][2] + ' ' + getBorderStyle(array[i][3]) + ' ' + variable[1] + ';';\r\n            // string = string + '\\n'+spacing+getBorderType(array[i][1])+': '+array[i][2]+' '+getBorderStyle(array[i][3])+' '+getColorValue(array[i][0], reset)+';';\r\n        }\r\n    }\r\n    return colorVariables + string;\r\n}\r\n;\r\n\r\nexport function getButtonsTypographyStyle(array, spacing, reset, btnLabel, btnStatus) {\r\n    var string = '';\r\n    if (array[0])\r\n        string = string + '\\n' + spacing + 'font-family: var(' + fontArray[btnFontIds.indexOf(array[0])] + ');';\r\n    if (reset && reset != true && btnStatus == 'none' && (btnLabel == 'btn' || btnLabel == 'form-control')) {// for copy code -> no need to add font-size in code -> css variables already set\r\n    } else {\r\n        if (array[1] && array[1] != 0) {\r\n            var fontSize = (array[1] == 9) ? array[2] : textArrayValues[array[1]];\r\n            if (btnStatus == 'none' && (btnLabel == 'btn' || btnLabel == 'form-control')) {\r\n                if (btnLabel == 'btn')\r\n                    string = string + '\\n' + spacing + '--btn-font-size: ' + fontSize + ';';\r\n                else\r\n                    string = string + '\\n' + spacing + '--form-control-font-size: ' + fontSize + ';';\r\n            } else {\r\n                string = string + '\\n' + spacing + 'font-size: ' + fontSize + ';';\r\n            }\r\n        }\r\n    }\r\n    if (array[3] && array[3] != '')\r\n        string = string + '\\n' + spacing + 'font-weight: ' + array[3] + ';';\r\n    if (array[4] && array[4] != 0)\r\n        string = string + '\\n' + spacing + 'text-transform: ' + getTextTransform(array[4]) + ';';\r\n    if (array[5] && array[5] != 0)\r\n        string = string + '\\n' + spacing + 'text-decoration: ' + getTextDecoration(array[5]) + ';';\r\n    if (btnLabel == 'btn' && btnStatus == 'none' && (!array[5] || array[5] == 0))\r\n        string = string + '\\n' + spacing + 'text-decoration: none;';\r\n    if (array[6] && array[6] != '')\r\n        string = string + '\\n' + spacing + 'line-height: ' + array[6] + ';'\r\n    if (array[7] && array[7] != '')\r\n        string = string + '\\n' + spacing + 'letter-spacing: ' + array[7] + ';'\r\n    if (array[8] && array[8] != 0) {\r\n        if (reset && reset === true) {\r\n            string = string + '\\n' + spacing + getFontSmoothing();\r\n        } else {\r\n            string = string + '\\n' + spacing + '@include fontSmooth;';\r\n        }\r\n    }\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsTextShadowStyle(array, spacing, reset) {\r\n    var string = ''\r\n        , colorVariables = ''\r\n        , set = false;\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (array[i][0] == 1) {\r\n            string = '\\n' + spacing + 'text-shadow: none;';\r\n            set = false;\r\n            break;\r\n        } else {\r\n            var app = array.length > 1 ? '-' + (i + 1) : '';\r\n            var variable = getColorFbIos(array[i][1], '--color-text-shadow' + app, spacing, reset);\r\n            colorVariables = colorVariables + variable[0];\r\n            if (i > 0)\r\n                string = string + ', ';\r\n            string = string + array[i][2] + ' ' + variable[1];\r\n            set = true;\r\n        }\r\n    }\r\n    if (set)\r\n        string = colorVariables + '\\n' + spacing + 'text-shadow: ' + string + ';';\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsShadowStyle(array, spacing, reset, isDemoReset) {\r\n    var string = ''\r\n        , colorVariables = ''\r\n        , set = false;\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (array[i][0] == 1) {\r\n            string = '\\n' + spacing + 'box-shadow: none;';\r\n            if (isDemoReset)\r\n                string = '\\n' + spacing + 'box-shadow: none !important;';\r\n            set = false;\r\n            break;\r\n        } else if (array[i][3] > 1) {\r\n            // custom shadow with framework variables\r\n            if (i > 0)\r\n                string = string + ', ';\r\n            string = string + shadowVariables[array[i][3]];\r\n            set = true;\r\n        } else {\r\n            var app = array.length > 1 ? '-' + (i + 1) : '';\r\n            var variable = getColorFbIos(array[i][1], '--color-shadow' + app, spacing, reset);\r\n            colorVariables = colorVariables + variable[0];\r\n            if (i > 0)\r\n                string = string + ', ';\r\n            string = string + getBoxShadowType(array[i][3]) + array[i][2] + ' ' + variable[1];\r\n            set = true;\r\n        }\r\n    }\r\n    if (set) {\r\n        // isDemoReset -> when loading forms for components, make sure to add important to box shadow to make sure the custom shadow is showed\r\n        if (isDemoReset)\r\n            string = string + ' !important';\r\n        string = colorVariables + '\\n' + spacing + 'box-shadow: ' + string + ';';\r\n    }\r\n\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsOutlineStyle(array, spacing, reset) {\r\n    var string = '';\r\n    if (array[1] && array[1] != 0) {\r\n        if (array[1] == 8)\r\n            string = string + '\\n' + spacing + 'outline: none;';\r\n        else\r\n            string = string + '\\n' + spacing + 'outline: ' + array[2] + ' ' + getOutlineStyle(array[1]) + ' ' + getColorValue(array[0], reset) + ';';\r\n    }\r\n    if (array[3] && array[3] != '')\r\n        string = string + '\\n' + spacing + 'outline-offset: ' + array[3] + ';';\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsTransformStyle(array, spacing, reset) {\r\n    var string = ''\r\n        , set = false;\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (array[i][0] == 0) {\r\n            string = '\\n' + spacing + 'transform: none;';\r\n            break;\r\n        } else {\r\n            if (i > 0)\r\n                string = string + ' ';\r\n            string = string + getTransformProperty(array[i][0]) + '(' + array[i][1] + ')';\r\n            set = true;\r\n        }\r\n    }\r\n    if (set)\r\n        string = '\\n' + spacing + 'transform: ' + string + ';';\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsTransitionStyle(array, spacing, reset) {\r\n    var string = ''\r\n        , set = false;\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (array[i][0] == 1) {\r\n            string = '\\n' + spacing + 'transition: none;';\r\n            break;\r\n        } else {\r\n            if (i > 0)\r\n                string = string + ', ';\r\n            string = string + getTransitionProperty(array[i][0]) + ' ' + array[i][1] + 's ' + getTransitionEase(array[i][2]);\r\n            if (array[i][3] != '')\r\n                string = string + ' ' + array[i][3] + 's';\r\n            set = true;\r\n        }\r\n    }\r\n    if (set)\r\n        string = '\\n' + spacing + 'transition: ' + string + ';';\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsPlaceholderStyle(array, spacing, reset, btnLabel, btnStatus) {\r\n    var string = '';\r\n    if (array.length < 1 || !array[0] || array[0] == '')\r\n        return '';\r\n    var style = '\\n' + spacing + '  color: ' + getColorValue(array[0], reset) + ';';\r\n\r\n    if (reset && reset === true) {\r\n        string = string + '}';\r\n        var selector = '.' + btnLabel;\r\n        if (btnStatus != 'none')\r\n            selector = selector + btnStatus;\r\n        string = string + selector + '::placeholder {\\n' + spacing + '  opacity: 1;' + spacing + style + '\\n' + spacing + '}';\r\n    } else {\r\n        string = string + '\\n\\n' + spacing + '&::placeholder {\\n' + spacing + '  opacity: 1;' + spacing + style + '\\n' + spacing + '}';\r\n    }\r\n    return string;\r\n}\r\n;\r\n\r\nexport function getButtonsFontSizeValue(array) {\r\n    var fontSize = '';\r\n    if (array[1] && array[1] != 0) {\r\n        fontSize = (array[1] == 9) ? array[2] : textArrayValues[array[1]];\r\n    }\r\n    return fontSize;\r\n}\r\n;\r\n\r\nexport function resetFormsStyleComponents() {\r\n    var style = '';\r\n    style = style + '.form-legend {color: inherit;line-height: normal;}';\r\n    return style;\r\n}\r\n;\r\n\r\nexport function getSuffixOpacity(value) {\r\n    if (value == 0)\r\n        return '-a00';\r\n    if (value < 10)\r\n        return '-a0' + value;\r\n    return '-a' + value;\r\n}\r\n;\r\n\r\nexport function getLuminance(hsl, iframe) {\r\n    if (hsl[0] == 0 && hsl[1] == 0 && hsl[2] == 1)\r\n        return 1;\r\n    // white\r\n    if (hsl[0] == 0 && hsl[1] == 0 && hsl[2] == 0)\r\n        return 0;\r\n    // black\r\n    var rgbSr = getRGBsrValues(hsl, iframe);\r\n    return (0.2126 * rgbSr[0] + 0.7152 * rgbSr[1] + 0.0722 * rgbSr[2]);\r\n}\r\n;\r\n\r\nexport function getRGBsrValues(value, iframe) {\r\n    var rgb = getRGBValues(value, iframe);\r\n    var rSr = (rgb[0] <= 0.03928) ? rgb[0] / 12.92 : Math.pow(((rgb[0] + 0.055) / 1.055), 2.4);\r\n    var gSr = (rgb[1] <= 0.03928) ? rgb[1] / 12.92 : Math.pow(((rgb[1] + 0.055) / 1.055), 2.4);\r\n    var bSr = (rgb[2] <= 0.03928) ? rgb[2] / 12.92 : Math.pow(((rgb[2] + 0.055) / 1.055), 2.4);\r\n    return [rSr, gSr, bSr];\r\n}\r\n;\r\n\r\nexport function getRGBValues(hsl, iframe) {\r\n    var rgb = getRGBfromHSL(hsl);\r\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255];\r\n}\r\n;\r\n\r\nexport function getRGBfromHSL(hsl) {\r\n    return chroma.hsl(hsl).rgb();\r\n};\r\nexport let loadedIframeCheck = false;\r\n//select text of a contentEditable element\r\njQuery.fn.selectText = function () {\r\n    var doc = document;\r\n    var element = this[0];\r\n    if (doc.body.createTextRange) {\r\n        var range = document.body.createTextRange();\r\n        range.moveToElementText(element);\r\n        range.select();\r\n    } else if (window.getSelection) {\r\n        var selection = window.getSelection();\r\n        var range = document.createRange();\r\n        range.selectNodeContents(element);\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n}\r\n;\r\n\r\nexport function initFontList(typography) {\r\n    fontArray = [''];\r\n    btnFontIds = [0];\r\n    for (var property in typography['fontFamilyLabels']) {\r\n        if (typography['fontFamilyLabels'].hasOwnProperty(property)) {\r\n            fontArray.push(typography['fontFamilyLabels'][property]);\r\n            btnFontIds.push(typography['fontFamilyIds'][property]);\r\n        }\r\n    }\r\n}\r\n;\r\n\r\n(function () {\r\n    var demoContainer = $('.js-cd-demo-container')\r\n        , demoViewport = $('.js-cd-demo-viewport-size');\r\n    //when double-clicking on variables -> select all text\r\n    demoContainer.on('dblclick', '.js-css-variable-label', function (event) {\r\n        $(event.currentTarget).selectText();\r\n    });\r\n\r\n    //detect click on iframe and send to main to close popups\r\n    var iframeParent = window.parent;\r\n    if (!iframeParent) {\r\n        iframeParent = parent;\r\n    }\r\n\r\n    if (iframeParent) {\r\n        $(window).on('click', function () {\r\n            if (iframeParent.closeActivePopups != null)\r\n                iframeParent.closeActivePopups();\r\n        });\r\n        // detect shortcut for search modal\r\n        window.addEventListener('keydown', function (event) {\r\n            if (event.keyCode && event.keyCode == 69 || event.key && event.key.toLowerCase() == 'e') {\r\n                if (event.ctrlKey || event.metaKey)\r\n                    iframeParent.openSiteSearch();\r\n            }\r\n        });\r\n    }\r\n\r\n    //detect resize of the page and reset iframe height\r\n    var resizing = false\r\n        , resizingID = false\r\n        , mqLabels = ['xs', 'sm', 'md', 'lg', 'xl'];\r\n    if (demoViewport.length > 0) {\r\n        window.addEventListener(\"resize\", function (event) {\r\n            if (!resizing) {\r\n                resizing = true;\r\n                window.requestAnimationFrame(updateLabelSizeWindow);\r\n            }\r\n        });\r\n    }\r\n\r\n    $('.js-cd-demo').on('globalsUpdate', function () {\r\n        updateComponentGlobals();\r\n    });\r\n\r\n    $('.js-cd-demo').on('showComponent', function () {\r\n        var compScript = $('#comp-script');\r\n        if (compScript) {\r\n            var newScript = compScript.clone();\r\n            newScript = compScript.attr('src', compScript.attr('data-src'));\r\n            newScript.removeAttr('data-src');\r\n            newScript.removeAttr('id');\r\n            newScript.insertBefore(compScript);\r\n        }\r\n        setTimeout(function () {\r\n            if (iframeParent)\r\n                iframeParent.revealComponent();\r\n        }, 300);\r\n    });\r\n\r\n    function updateLabelSizeWindow() {\r\n        var mq = getMq()\r\n            , sizes = getScreenSize();\r\n        if (resizing) {\r\n            demoContainer.trigger('windowResizing');\r\n            var mqLabelText = (mq > 0) ? ' (' + mqLabels[mq - 1] + ')' : '';\r\n            demoViewport.text(sizes[0] + 'px x ' + sizes[1] + 'px' + mqLabelText).show();\r\n            if (resizingID)\r\n                clearInterval(resizingID);\r\n            resizingID = setTimeout(function () {\r\n                demoViewport.hide();\r\n            }, 1000);\r\n        }\r\n        resizing = false;\r\n    }\r\n    ;\r\n\r\n    function updateComponentGlobals() {\r\n        //components -> if there's a project set, we should listen for changes in the viewport width as well\r\n        //typography and spacing are the only responsive globals\r\n        if (projectLoaded && (projectLoaded.typography || projectLoaded.spacing)) {\r\n            window.addEventListener(\"resize\", function (event) {\r\n                if (!resizing) {\r\n                    resizing = true;\r\n                    window.requestAnimationFrame(updateGlobals);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ;\r\n\r\n    function updateGlobals() {\r\n        var mq = getMq();\r\n        if (mq == MQ) {\r\n            resizing = false;\r\n            return;\r\n        }\r\n        MQ = mq;\r\n\r\n        if (projectLoaded.typography && projectLoaded.typography !== '') {\r\n            //typography was saved and need to be modified\r\n            loadTypographyStyle(JSON.parse(decodeSafeURIComponent(projectLoaded.typography)), false, mq);\r\n        }\r\n\r\n        if (projectLoaded.spacing && projectLoaded.spacing !== '') {\r\n            //typography was saved and need to be modified\r\n            loadSpacingStyle(JSON.parse(decodeSafeURIComponent(projectLoaded.spacing)), mq);\r\n        }\r\n        resizing = false;\r\n    }\r\n    ;\r\n\r\n    loadedIframeCheck = true;\r\n}());\r\n"],"names":["fontArray","btnFontIds","decodeSafeURIComponent","string","decodeURIComponent","replace","paddingVariables","spaceRatioUnit","setCssVariable","variable","value","priority","root","document","documentElement","style","setProperty","getMq","windowWidth","$","window","outerWidth","mq","parent","body","clientWidth","text","getValidResponsiveValue","spaceArray","index","subIndex","item","getBodyNotFalse","array","newArray","i","projectLoaded","MQ","loadTypographyStyle","typography","bool","property","appendTo","hasOwnProperty","getElementsByTagName","lhcropArray","Object","values","length","push","headingValues","getTypographyArray","bodyValues","loadTypographyStyleTag","getTypographyStyle","getTextUnit","setTypographyCssVariables","styleContent","remove","baseStyle","insertAfter","textUnit","indexOf","loadSpacingStyle","spacing","spaceUnit","spaceRatioCustom","obj","arr","getSpaceRatioCustom","srList","spaceRatio","list","getSpacingCustomScaleRatio","getSpacingMultiplier","padding","spacingVariables","loadSpacingStyleTag","updateSpacingCssVariables","selector","parseInt","fontIds","getSpacingValidResponsiveValueCustomRatio","jQuery","fn","selectText","doc","element","this","createTextRange","range","moveToElementText","select","getSelection","selection","createRange","selectNodeContents","removeAllRanges","addRange","demoContainer","demoViewport","on","event","currentTarget","iframeParent","closeActivePopups","addEventListener","keyCode","key","toLowerCase","ctrlKey","metaKey","openSiteSearch","resizing","resizingID","mqLabels","updateLabelSizeWindow","sizes","outerHeight","trigger","mqLabelText","show","clearInterval","setTimeout","hide","updateGlobals","JSON","parse","requestAnimationFrame","compScript","newScript","clone","attr","removeAttr","insertBefore","revealComponent"],"sourceRoot":""}